/*
 * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/** *
 * @author raqibmuktadir
 */
import java.util.Date;
import com.itextpdf.text.BaseColor; import com.itextpdf.text.Document; import com.itextpdf.text.Element; import com.itextpdf.text.FontFactory; import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph; import com.itextpdf.text.pdf.PdfPCell; import com.itextpdf.text.pdf.PdfPTable; import com.itextpdf.text.pdf.PdfWriter; import java.awt.event.*;
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils; import java.text.*;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Calendar;
import java.util.GregorianCalendar;
public class Inventory extends javax.swing.JFrame {
    Connection conn=null; ResultSet rs=null; PreparedStatement pst=null; /**
     * Creates new form Inventory
     */
    public Inventory() {
        initComponents(); conn=javaconnect.ConnecrDb(); Update_table();
    }
    public void Update_table(){
        try{
            String sql= "select * from Inventory"; pst=conn.prepareStatement(sql);
            rs=pst.executeQuery(); Table_inventory.setModel(DbUtils.resultSetToTableModel(rs)); }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        } finally{
            try{ rs.close(); pst.close();
            }
            catch(Exception e){ }
        }
    }
    public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent); }
/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always * regenerated by the Form Editor.
 */
    @SuppressWarnings("unchecked")

// <editor-fold defaultstate="collapsed" desc="Generated Code"> private void initComponents() {
    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane(); Table_inventory = new javax.swing.JTable();
    jPanel2 = new javax.swing.JPanel();
    jLabel4 = new javax.swing.JLabel();
    txt_product_id = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    txt_item_name = new javax.swing.JTextField(); cmd_delete = new javax.swing.JButton(); txt_type_of_item = new javax.swing.JTextField(); txt_units_in_inventory = new javax.swing.JTextField(); cmd_save = new javax.swing.JButton();
    cmd_update = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    back = new javax.swing.JButton();
    cmd_clear = new javax.swing.JButton();
    cmd_print = new javax.swing.JButton();
    jPanel3 = new javax.swing.JPanel();
    txt_search = new javax.swing.JTextField();
    jPanel4 = new javax.swing.JPanel();
    cmd_attach = new javax.swing.JButton(); txt_filechooser = new javax.swing.JTextField(); cmd_generate = new javax.swing.JButton();
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
jPanel1.setBackground(new java.awt.Color(204, 255, 255));
jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uwc-logo.png"))); // NOI18N
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1); jPanel1.setLayout(jPanel1Layout);
jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel1Layout.createSequentialGroup()
.addGap(500, 500, 500) .addComponent(jLabel1) .addGap(500, 500, 500))

            ); jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
);
Table_inventory.setModel(new javax.swing.table.DefaultTableModel( new Object [][] {
    },
            new String [] {
        "Product ID", "Item Name", "Type of Item", "Units in Inventory" }
));
Table_inventory.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) { Table_inventoryMouseClicked(evt);
        } });
Table_inventory.addKeyListener(new java.awt.event.KeyAdapter() { public void keyPressed(java.awt.event.KeyEvent evt) {
        Table_inventoryKeyPressed(evt); }
    }); jScrollPane1.setViewportView(Table_inventory);
jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inventory", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N
jLabel4.setText("Type of Item"); jLabel5.setText("Units in Inventory");
cmd_delete.setText("Delete");
cmd_delete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_deleteActionPerformed(evt);
        } });

cmd_save.setText("Save");
cmd_save.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_saveActionPerformed(evt);
        } });
cmd_update.setText("Update");
cmd_update.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_updateActionPerformed(evt);
        } });
jLabel2.setText("Product ID"); jLabel3.setText("Item Name");
back.setText("Back to Main Menu"); back.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { backActionPerformed(evt);
        } });
cmd_clear.setText("Clear");
cmd_clear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_clearActionPerformed(evt);
        } });
cmd_print.setText("Print");
cmd_print.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_printActionPerformed(evt);
        } });
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2); jPanel2.setLayout(jPanel2Layout);
jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()

.addContainerGap()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(jLabel2)
.addComponent(jLabel3) .addComponent(jLabel4) .addComponent(jLabel5))
            .addGap(49, 49, 49)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING) .addComponent(txt_product_id)
.addComponent(txt_item_name) .addComponent(txt_type_of_item) .addComponent(txt_units_in_inventory)))
            .addGroup(jPanel2Layout.createSequentialGroup()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()
.addComponent(cmd_update) .addGap(20, 20, 20) .addComponent(cmd_save) .addGap(20, 20, 20) .addComponent(cmd_delete) .addGap(20, 20, 20) .addComponent(cmd_clear))
            .addGroup(jPanel2Layout.createSequentialGroup() .addGap(41, 41, 41)
.addComponent(back)
.addGap(18, 18, 18) .addComponent(cmd_print)))
            .addGap(0, 0, Short.MAX_VALUE))) .addContainerGap())
            ); jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()
.addContainerGap()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(jLabel2)

.addComponent(txt_product_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(22, 22, 22)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(jLabel3)
.addComponent(txt_item_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(21, 21, 21)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(jLabel4)
.addComponent(txt_type_of_item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(19, 19, 19)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(jLabel5)
.addComponent(txt_units_in_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(30, 30, 30)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(cmd_update)
.addComponent(cmd_delete) .addComponent(cmd_save) .addComponent(cmd_clear))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(back)
.addComponent(cmd_print)) .addContainerGap(14, Short.MAX_VALUE))
            );
jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N
txt_search.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) {
        txt_searchActionPerformed(evt); }

    });
txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) { txt_searchKeyReleased(evt);
        } });
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3); jPanel3.setLayout(jPanel3Layout);
jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel3Layout.createSequentialGroup()
.addContainerGap()
.addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap()) );
jPanel3Layout.setVerticalGroup( jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel3Layout.createSequentialGroup()
.addContainerGap()
.addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap()) );
jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "File Chooser", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N
cmd_attach.setText("Attach");
cmd_attach.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_attachActionPerformed(evt);
        } });
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4); jPanel4.setLayout(jPanel4Layout);
jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel4Layout.createSequentialGroup()
.addContainerGap()

.addComponent(txt_filechooser, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) .addComponent(cmd_attach) .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            ); jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel4Layout.createSequentialGroup()
.addContainerGap()
.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(txt_filechooser, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                      javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addComponent(cmd_attach))
            .addContainerGap()) );
cmd_generate.setText("Generate Report"); cmd_generate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_generateActionPerformed(evt);
        } });
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); getContentPane().setLayout(layout);
layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
.addGap(24, 24, 24) .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(cmd_generate)) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                              javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                   javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)

.addGap(18, 18, 18)
.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
            ); layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(layout.createSequentialGroup()
.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(18, 18, 18) .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGroup(layout.createSequentialGroup()
.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
              javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED) .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                                                 javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addGap(18, 18, 18)
.addComponent(cmd_generate))
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                          javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))) );
    pack();
}// </editor-fold>
    private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) { try{
        String value1 = txt_product_id.getText();
        String value2 = txt_item_name.getText();
        String value3 = txt_type_of_item.getText();
        String value4 = txt_units_in_inventory.getText();
        String sql= "update Inventory set ID_Number='"+value1+"' ,Item_Name='"+value2+"'
                ,Type_of_Item='"+value3+"' ,Units_In_Inventory='"+value4+"' where ID_Number='"+value1+"'"; pst=conn.prepareStatement(sql);
        pst.execute();
        JOptionPane.showMessageDialog(null, "Updated");
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null, e); }
        Update_table();

    }
    private void Table_inventoryMouseClicked(java.awt.event.MouseEvent evt) { try{
        int row = Table_inventory.getSelectedRow();
        String Table_click= (Table_inventory.getModel().getValueAt(row, 0).toString()); String sql ="select * from Inventory where ID_Number='"+Table_click+"'"; pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        if(rs.next()){
            String add1=rs.getString("ID_Number");
            txt_product_id.setText(add1);
            String add2=rs.getString("Item_Name");
            txt_item_name.setText(add2);
            String add3=rs.getString("Type_of_Item");
            txt_type_of_item.setText(add3);
            String add4=rs.getString("Units_In_Inventory"); txt_units_in_inventory.setText(add4);
        } }
    catch(Exception e){ JOptionPane.showMessageDialog(null, e); } finally{
        try{ rs.close(); pst.close();
        }
        catch(Exception e){ }
    } }
    private void backActionPerformed(java.awt.event.ActionEvent evt) { Reprographicsdata a =new Reprographicsdata();
        a.setVisible(true);
        close();// TODO add your handling code here:
    }
    private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) { try{
        String sql= "Insert into Inventory (ID_Number,Item_Name,Type_of_Item,Units_In_Inventory) values (?,?,?,?)";
        pst=conn.prepareStatement(sql);

        pst.setString(1, txt_product_id.getText()); pst.setString(2, txt_item_name.getText()); pst.setString(3, txt_type_of_item.getText()); pst.setString(4, txt_units_in_inventory.getText()); pst.execute(); JOptionPane.showMessageDialog(null, "Saved");
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null, e); }
        Update_table(); }
    private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) { String sql= "delete from Inventory where ID_Number=?";
        try{
            pst=conn.prepareStatement(sql);
            pst.setString(1, txt_product_id.getText()); pst.execute(); JOptionPane.showMessageDialog(null, "Deleted"); }
        catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        } Update_table(); }
    private void cmd_clearActionPerformed(java.awt.event.ActionEvent evt) { txt_product_id.setText("");
        txt_item_name.setText("");
        txt_type_of_item.setText("");
        txt_units_in_inventory.setText(""); }
    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) { try{
        String sql= "select * from Inventory where Type_of_Item=?"; pst=conn.prepareStatement(sql);
        pst.setString(1, txt_search.getText()); rs=pst.executeQuery();
        if(rs.next()){
            String add1=rs.getString("ID_Number"); txt_product_id.setText(add1);
            String add2=rs.getString("Item_Name");

            txt_item_name.setText(add2);
            String add3=rs.getString("Type_of_Item"); txt_type_of_item.setText(add3);
            String add4=rs.getString("Units_In_Inventory"); txt_units_in_inventory.setText(add4);
        } }
    catch(Exception e){ JOptionPane.showMessageDialog(null, e);
    }finally{ try{
        rs.close();
        pst.close(); }
    catch(Exception e){ }
    }
        try{
            String sql= "select * from Inventory where ID_Number=?"; pst=conn.prepareStatement(sql);
            pst.setString(1, txt_search.getText()); rs=pst.executeQuery();
            if(rs.next()){
                String add1=rs.getString("ID_Number"); txt_product_id.setText(add1);
                String add2=rs.getString("Item_Name"); txt_item_name.setText(add2);
                String add3=rs.getString("Type_of_Item"); txt_type_of_item.setText(add3);
                String add4=rs.getString("Units_In_Inventory"); txt_units_in_inventory.setText(add4);
            } }
        catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        }finally{ try{
            rs.close();
            pst.close(); }
        catch(Exception e){ }
        }

        try{
            String sql= "select * from Inventory where Item_Name=?"; pst=conn.prepareStatement(sql);
            pst.setString(1, txt_search.getText()); rs=pst.executeQuery();
            if(rs.next()){
                String add1=rs.getString("ID_Number"); txt_product_id.setText(add1);
                String add2=rs.getString("Item_Name"); txt_item_name.setText(add2);
                String add3=rs.getString("Type_of_Item"); txt_type_of_item.setText(add3);
                String add4=rs.getString("Units_In_Inventory"); txt_units_in_inventory.setText(add4);
            } }
        catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        }finally{ try{
            rs.close();
            pst.close(); }
        catch(Exception e){ }
        }
        try{
            String sql= "select * from Inventory where Units_In_Inventory=?"; pst=conn.prepareStatement(sql);
            pst.setString(1, txt_search.getText());
            rs=pst.executeQuery();
            if(rs.next()){
                String add1=rs.getString("ID_Number"); txt_product_id.setText(add1);
                String add2=rs.getString("Item_Name"); txt_item_name.setText(add2);
                String add3=rs.getString("Type_of_Item"); txt_type_of_item.setText(add3);
                String add4=rs.getString("Units_In_Inventory"); txt_units_in_inventory.setText(add4);
            } }

        catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        }finally{ try{
            rs.close();
            pst.close(); }
        catch(Exception e){ }
        }
    }
    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here:
    }
    private void Table_inventoryKeyPressed(java.awt.event.KeyEvent evt) { if(evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP){
        try{
            int row = Table_inventory.getSelectedRow();
            String Table_click= (Table_inventory.getModel().getValueAt(row, 0).toString()); String sql ="select * from Inventory where ID_Number='"+Table_click+"'"; pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
                String add1=rs.getString("ID_Number");
                txt_product_id.setText(add1);
                String add2=rs.getString("Item_Name");
                txt_item_name.setText(add2);
                String add3=rs.getString("Type_of_Item");
                txt_type_of_item.setText(add3);
                String add4=rs.getString("Units_In_Inventory"); txt_units_in_inventory.setText(add4);
            } }
        catch(Exception e){ JOptionPane.showMessageDialog(null, e); } finally{
            try{ rs.close(); pst.close();
            }
            catch(Exception e){

            } }
    } }
    private void cmd_printActionPerformed(java.awt.event.ActionEvent evt) { MessageFormat header= new MessageFormat("Inventory Report"); MessageFormat footer= new MessageFormat("Page{0,number,integer}"); try{
        Table_inventory.print(JTable.PrintMode.NORMAL, header, footer); }
    catch(java.awt.print.PrinterException e){ System.err.format("Cannot print", e.getMessage());
    } }
    private void cmd_attachActionPerformed(java.awt.event.ActionEvent evt) { JFileChooser chooser= new JFileChooser(); chooser.showOpenDialog(null);
        File f =chooser.getSelectedFile();
        String filename =f.getAbsolutePath();
        txt_filechooser.setText(filename); }
    private void cmd_generateActionPerformed(java.awt.event.ActionEvent evt) { String Value1 = txt_product_id.getText();
        String Value2 = txt_item_name.getText();
        String Value3 = txt_type_of_item.getText();
        String Value4 = txt_units_in_inventory.getText();
        Calendar cal= new GregorianCalendar();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DAY_OF_MONTH); System.out.println("Current date : "
                + day + "/" + (month + 1) + "/" + year);
        try{
            Document document= new Document(); PdfWriter.getInstance(document, new FileOutputStream("Report.pdf")); document.open();
            Image image=Image.getInstance("logo.png");
            document.add(new Paragraph("Image"));
            document.add(image);

            document.add(new Paragraph("Inventory", FontFactory.getFont(FontFactory.TIMES_BOLD,24,Font.BOLD,BaseColor.BLACK)));
            document.add(new Paragraph(new Date().toString()));
            document.add(new Paragraph("------------------------------------------------------------------------------ -------"));
            PdfPTable table=new PdfPTable(2);
            PdfPCell cell= new PdfPCell(new Paragraph("Report")); cell.setColspan(4); cell.setHorizontalAlignment(Element.ALIGN_CENTER); cell.setBackgroundColor(BaseColor.CYAN); table.addCell(cell);
            table.addCell("Product ID");
            table.addCell(Value1);
            table.addCell("Item Name");
            table.addCell(Value2);
            table.addCell("Type of Item");
            table.addCell(Value3);
            table.addCell("Units in Inventory"); table.addCell(Value4);
            document.add(table);
            document.close();
            JOptionPane.showMessageDialog(null, "Report created"); }catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        }
    }
    /**
     * @param args the command line arguments */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "> /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
*/ try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) { javax.swing.UIManager.setLookAndFeel(info.getClassName()); break;

                } }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE , null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE , null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE , null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE , null, ex);
        } //</editor-fold>
        /* Create and display the form */ java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            } });
    }
    // Variables declaration - do not modify private javax.swing.JTable Table_inventory; private javax.swing.JButton back;
    private javax.swing.JButton cmd_attach; private javax.swing.JButton cmd_clear; private javax.swing.JButton cmd_delete; private javax.swing.JButton cmd_generate; private javax.swing.JButton cmd_print; private javax.swing.JButton cmd_save; private javax.swing.JButton cmd_update; private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;

    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_filechooser;
    private javax.swing.JTextField txt_item_name; private javax.swing.JTextField txt_product_id;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_type_of_item; private javax.swing.JTextField txt_units_in_inventory; // End of variables declaration
}
