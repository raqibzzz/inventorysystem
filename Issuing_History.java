import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document; import com.itextpdf.text.Element; import com.itextpdf.text.FontFactory; import com.itextpdf.text.Paragraph; import com.itextpdf.text.pdf.PdfPCell; import com.itextpdf.text.pdf.PdfPTable; import com.itextpdf.text.pdf.PdfWriter; import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.*;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import java.awt.event.*;
import java.awt.*;
import java.text.*;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import org.jfree.data.category.DefaultCategoryDataset; /*
 * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/** *
 * @author raqibmuktadir
 */
public class Issuing_History extends javax.swing.JFrame {
    Connection conn=null; ResultSet rs=null; PreparedStatement pst=null; /**
     * Creates new form Issuing_History
     */
    public Issuing_History() {
        initComponents(); conn=javaconnect.ConnecrDb();

        Update_table(); }
    public void Update_table(){ try{
        String sql= "select * from Issuing_History"; pst=conn.prepareStatement(sql);
        rs=pst.executeQuery(); Table_issuinghistory.setModel(DbUtils.resultSetToTableModel(rs)); }
    catch(Exception e){ JOptionPane.showMessageDialog(null, e); } finally{
        try{ rs.close(); pst.close();
        }
        catch(Exception e){ }finally{
            try{
                rs.close();
                pst.close(); }
            catch(Exception e){ }
        }
    }
    }
    public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent); }
/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always * regenerated by the Form Editor.
 */
    @SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code"> private void initComponents() {
    jLabel7 = new javax.swing.JLabel(); cmd_bargraph = new javax.swing.JButton();

    jScrollPane1 = new javax.swing.JScrollPane(); Table_issuinghistory = new javax.swing.JTable(); jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jPanel2 = new javax.swing.JPanel(); txt_quantityissued = new javax.swing.JTextField(); jLabel3 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel(); txt_issueditem = new javax.swing.JTextField(); cmd_save = new javax.swing.JButton();
    txt_name = new javax.swing.JTextField();
    txt_id = new javax.swing.JTextField(); cmd_update = new javax.swing.JButton(); cmd_delete = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    txt_email = new javax.swing.JTextField();
    back = new javax.swing.JButton();
    cmd_clear = new javax.swing.JButton(); cmd_print1 = new javax.swing.JButton();
    jPanel4 = new javax.swing.JPanel();
    cmd_email = new javax.swing.JButton(); txt_sendmail = new javax.swing.JTextField(); jPanel3 = new javax.swing.JPanel();
    txt_search = new javax.swing.JTextField();
    jPanel7 = new javax.swing.JPanel();
    cmd_attach3 = new javax.swing.JButton(); txt_filechooser = new javax.swing.JTextField(); cmd_report = new javax.swing.JButton();
jLabel7.setText("jLabel7");
cmd_bargraph.setText("Bar Graph"); cmd_bargraph.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_bargraphActionPerformed(evt);
        } });
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
Table_issuinghistory.setModel(new javax.swing.table.DefaultTableModel( new Object [][] {

        {null, null, null, null}, {null, null, null, null}, {null, null, null, null}, {null, null, null, null}
    },
            new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4" }
));
Table_issuinghistory.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) { Table_issuinghistoryMouseClicked(evt);
        } });
Table_issuinghistory.addKeyListener(new java.awt.event.KeyAdapter() { public void keyPressed(java.awt.event.KeyEvent evt) {
        Table_issuinghistoryKeyPressed(evt); }
    }); jScrollPane1.setViewportView(Table_issuinghistory);
jPanel1.setBackground(new java.awt.Color(204, 255, 255));
jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uwc-logo.png"))); // NOI18N
    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1); jPanel1.setLayout(jPanel1Layout);
jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
.addGap(590, 590, 590) .addComponent(jLabel1) .addGap(590, 590, 590))
            ); jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
);
jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Issuing History", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,

    javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N
txt_quantityissued.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) {
        txt_quantityissuedActionPerformed(evt); }
    });
jLabel3.setText("Name"); jLabel5.setText("Quantity Issued");
txt_issueditem.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) {
        txt_issueditemActionPerformed(evt); }
    });
cmd_save.setText("Save");
cmd_save.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_saveActionPerformed(evt);
        } });
txt_name.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) {
        txt_nameActionPerformed(evt); }
    });
cmd_update.setText("Update");
cmd_update.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_updateActionPerformed(evt);
        } });
cmd_delete.setText("Delete");
cmd_delete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_deleteActionPerformed(evt);
        }

    });
jLabel4.setText("Issued Item"); jLabel2.setText("ID"); jLabel6.setText("Email");
back.setText("Back to Main Menu"); back.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { backActionPerformed(evt);
        } });
cmd_clear.setText("Clear");
cmd_clear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_clearActionPerformed(evt);
        } });
cmd_print1.setText("Print");
cmd_print1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_print1ActionPerformed(evt);
        } });
jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Send Email", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N
cmd_email.setText("Send Email"); cmd_email.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_emailActionPerformed(evt);
        } });
txt_sendmail.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) {
        txt_sendmailActionPerformed(evt);

    } });
    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4); jPanel4.setLayout(jPanel4Layout);
jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel4Layout.createSequentialGroup()
.addContainerGap()
.addComponent(txt_sendmail, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) .addComponent(cmd_email) .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            ); jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel4Layout.createSequentialGroup()
.addContainerGap()
.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(cmd_email)
.addComponent(txt_sendmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap()) );
jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N
txt_search.addActionListener(new java.awt.event.ActionListener() { public void actionPerformed(java.awt.event.ActionEvent evt) {
        txt_searchActionPerformed(evt); }
    });
txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) { txt_searchKeyReleased(evt);
        } });
    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);

jPanel3.setLayout(jPanel3Layout); jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel3Layout.createSequentialGroup()
.addContainerGap()
.addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap()) );
jPanel3Layout.setVerticalGroup( jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel3Layout.createSequentialGroup()
.addContainerGap()
.addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap()) );
jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "File Chooser", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 18))); // NOI18N
cmd_attach3.setText("Attach");
cmd_attach3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_attach3ActionPerformed(evt);
        } });
    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7); jPanel7.setLayout(jPanel7Layout);
jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel7Layout.createSequentialGroup()
.addContainerGap()
.addComponent(txt_filechooser, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) .addComponent(cmd_attach3) .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            ); jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)

            .addGroup(jPanel7Layout.createSequentialGroup() .addContainerGap()
.addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(txt_filechooser, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                      javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addComponent(cmd_attach3))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)) );
cmd_report.setText("Generate Report"); cmd_report.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) { cmd_reportActionPerformed(evt);
        } });
    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2); jPanel2.setLayout(jPanel2Layout);
jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()
.addContainerGap()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()
.addGap(2, 2, 2)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                     javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                                                                 javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))) .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                                                                                                                                                               javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addComponent(cmd_report))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addComponent(jLabel6)
.addComponent(jLabel2)

.addComponent(jLabel3) .addComponent(jLabel4) .addComponent(jLabel5))
            .addGap(25, 25, 25)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
.addComponent(txt_id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
.addComponent(txt_name, javax.swing.GroupLayout.Alignment.LEADING) .addComponent(txt_issueditem, javax.swing.GroupLayout.Alignment.LEADING) .addComponent(txt_quantityissued,
                                                                                                                                                          javax.swing.GroupLayout.Alignment.LEADING) .addComponent(txt_email)))
            .addGroup(jPanel2Layout.createSequentialGroup() .addComponent(cmd_update) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) .addComponent(back)
.addGap(18, 18, 18)
.addComponent(cmd_save) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED) .addComponent(cmd_clear) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED) .addComponent(cmd_print1) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED) .addComponent(cmd_delete)))
            .addGap(0, 0, 0)) );
jPanel2Layout.setVerticalGroup( jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(jPanel2Layout.createSequentialGroup()
.addContainerGap()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(jLabel2)
.addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(20, 20, 20)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(jLabel3)
.addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(20, 20, 20)

.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(jLabel4)
.addComponent(txt_issueditem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(20, 20, 20)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(jLabel5)
.addComponent(txt_quantityissued, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(20, 20, 20)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(jLabel6)
.addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) .addComponent(cmd_update)
.addComponent(cmd_save) .addComponent(cmd_delete) .addComponent(back) .addComponent(cmd_clear) .addComponent(cmd_print1))
            .addGap(33, 33, 33)) .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                           jPanel2Layout.createSequentialGroup() .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                                       javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED) .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                                                                                                                                                                                                          javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addGap(18, 18, 18)
.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(28, 28, 28) .addComponent(cmd_report) .addContainerGap())
            );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); getContentPane().setLayout(layout);
layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addGroup(layout.createSequentialGroup()
.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
              javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                                               javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) .addContainerGap())
            ); layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) .addGroup(layout.createSequentialGroup()
.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addContainerGap()) .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                              layout.createSequentialGroup() .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                              javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                                   javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))) );
    pack();
}// </editor-fold>
    private void Table_issuinghistoryMouseClicked(java.awt.event.MouseEvent evt) { try{
        int row = Table_issuinghistory.getSelectedRow();
        String Table_click= (Table_issuinghistory.getModel().getValueAt(row, 0).toString()); String sql ="select * from Issuing_History where ID='"+Table_click+"'"; pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        if(rs.next()){

        }
        String add1=rs.getString("ID"); txt_id.setText(add1);
        String add2=rs.getString("Name"); txt_name.setText(add2);
        String add3=rs.getString("Issued_Item"); txt_issueditem.setText(add3);
        String add4=rs.getString("Quantity_Issued"); txt_quantityissued.setText(add4);
        String add5=rs.getString("Email"); txt_email.setText(add5); txt_sendmail.setText(add5);
    } }
catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        } finally{ try{
        rs.close();
        pst.close(); }
        catch(Exception e){ }
// TODO add your handling code here:
private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here:
        }
private void cmd_updateActionPerformed(java.awt.event.ActionEvent evt) { try{
        String value1 = txt_id.getText();
        String value2 = txt_name.getText();
        String value3 = txt_issueditem.getText();
        String value4 = txt_quantityissued.getText();
        String value5 = txt_email.getText();
        String sql= "update Issuing_History set ID='"+value1+"' ,Name='"+value2+"'
        ,Issued_Item='"+value3+"' ,Quantity_Issued='"+value4+"' ,Email='"+value5+"' where ID='"+value1+"'";
        pst=conn.prepareStatement(sql);
        pst.execute(); JOptionPane.showMessageDialog(null, "Updated");
        }
        catch(Exception e){
        }

        JOptionPane.showMessageDialog(null, e); }
        Update_table(); }
private void backActionPerformed(java.awt.event.ActionEvent evt) { Reprographicsdata a =new Reprographicsdata(); a.setVisible(true);
        close(); // TODO add your handling code here:
        }
private void cmd_saveActionPerformed(java.awt.event.ActionEvent evt) { try{
        String sql= "Insert into Issuing_History (ID,Name,Issued_Item,Quantity_Issued,Email) values (?,?,?,?,?)";
        pst=conn.prepareStatement(sql); pst.setString(1, txt_id.getText());
        pst.setString(2, txt_name.getText()); pst.setString(3, txt_issueditem.getText()); pst.setString(4, txt_quantityissued.getText()); pst.setString(5, txt_email.getText()); pst.execute(); JOptionPane.showMessageDialog(null, "Saved");
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e); }
        Update_table(); // TODO add your handling code here: }
private void cmd_deleteActionPerformed(java.awt.event.ActionEvent evt) { String sql= "delete from Issuing_History where ID=?";
        try{
        pst=conn.prepareStatement(sql);
        pst.setString(1, txt_id.getText());
        pst.execute(); JOptionPane.showMessageDialog(null, "Deleted"); }
        catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        }
        Update_table(); // TODO add your handling code here: }

private void cmd_clearActionPerformed(java.awt.event.ActionEvent evt) { txt_id.setText("");
        txt_name.setText("");
        txt_issueditem.setText("");
        txt_quantityissued.setText(""); txt_email.setText("");
        }
private void txt_quantityissuedActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here:
        }
private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) { try{
        String sql= "select * from Issuing_History where Name=?"; pst=conn.prepareStatement(sql);
        pst.setString(1, txt_search.getText()); rs=pst.executeQuery();
        if(rs.next()){
        String add1=rs.getString("ID"); txt_id.setText(add1);
        String add2=rs.getString("Name"); txt_name.setText(add2);
        String add3=rs.getString("Issued_Item"); txt_issueditem.setText(add3);
        String add4=rs.getString("Quantity_Issued"); txt_quantityissued.setText(add4);
        String add5=rs.getString("Email"); txt_email.setText(add5);
        } }
        catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        }finally{ try{
        rs.close();
        pst.close(); }
        catch(Exception e){ }
        }
        try{
        String sql= "select * from Issuing_History where ID=?";

        pst=conn.prepareStatement(sql); pst.setString(1, txt_search.getText()); rs=pst.executeQuery();
        if(rs.next()){
        String add1=rs.getString("ID"); txt_id.setText(add1);
        String add2=rs.getString("Name"); txt_name.setText(add2);
        String add3=rs.getString("Issued_Item"); txt_issueditem.setText(add3);
        String add4=rs.getString("Quantity_Issued"); txt_quantityissued.setText(add4);
        String add5=rs.getString("Email");
        txt_email.setText(add5); }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e); }finally{
        try{ rs.close(); pst.close();
        }
        catch(Exception e){ }
        }
        try{
        String sql= "select * from Issuing_History where Issued_Item=?"; pst=conn.prepareStatement(sql);
        pst.setString(1, txt_search.getText());
        rs=pst.executeQuery();
        if(rs.next()){
        String add1=rs.getString("ID"); txt_id.setText(add1);
        String add2=rs.getString("Name"); txt_name.setText(add2);
        String add3=rs.getString("Issued_Item"); txt_issueditem.setText(add3);
        String add4=rs.getString("Quantity_Issued"); txt_quantityissued.setText(add4);
        String add5=rs.getString("Email");
        txt_email.setText(add5); }

        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e); }finally{
        try{ rs.close(); pst.close();
        }
        catch(Exception e){ }
        }
        try{
        String sql= "select * from Issuing_History where Quantity_Issued=?"; pst=conn.prepareStatement(sql);
        pst.setString(1, txt_search.getText());
        rs=pst.executeQuery();
        if(rs.next()){
        String add1=rs.getString("ID"); txt_id.setText(add1);
        String add2=rs.getString("Name"); txt_name.setText(add2);
        String add3=rs.getString("Issued_Item"); txt_issueditem.setText(add3);
        String add4=rs.getString("Quantity_Issued"); txt_quantityissued.setText(add4);
        String add5=rs.getString("Email");
        txt_email.setText(add5); }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e); }finally{
        try{ rs.close(); pst.close();
        }
        catch(Exception e){ }
        }
        try{
        String sql= "select * from Issuing_History where Email=?"; pst=conn.prepareStatement(sql);

        pst.setString(1, txt_search.getText()); rs=pst.executeQuery();
        if(rs.next()){
        String add1=rs.getString("ID"); txt_id.setText(add1);
        String add2=rs.getString("Name"); txt_name.setText(add2);
        String add3=rs.getString("Issued_Item"); txt_issueditem.setText(add3);
        String add4=rs.getString("Quantity_Issued"); txt_quantityissued.setText(add4);
        String add5=rs.getString("Email");
        txt_email.setText(add5); }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e); }finally{
        try{ rs.close(); pst.close();
        }
        catch(Exception e){ }
        }
        }
private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here:
        }
private void Table_issuinghistoryKeyPressed(java.awt.event.KeyEvent evt) { if(evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP){
        try{
        int row = Table_issuinghistory.getSelectedRow();
        String Table_click= (Table_issuinghistory.getModel().getValueAt(row, 0).toString()); String sql ="select * from Issuing_History where ID='"+Table_click+"'"; pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        if(rs.next()){
        String add1=rs.getString("ID"); txt_id.setText(add1);
        String add2=rs.getString("Name"); txt_name.setText(add2);

// //
        String add3=rs.getString("Issued_Item"); txt_issueditem.setText(add3);
        String add4=rs.getString("Quantity_Issued"); txt_quantityissued.setText(add4);
        String add5=rs.getString("Email"); txt_email.setText(add5);
        } }
        catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        } finally{ try{
        rs.close();
        pst.close(); }
        catch(Exception e){
        } }
        } }
private void cmd_print1ActionPerformed(java.awt.event.ActionEvent evt) { MessageFormat header= new MessageFormat("Issuing History Report"); MessageFormat footer= new MessageFormat("Page{0,number,integer}"); try{
        Table_issuinghistory.print(JTable.PrintMode.NORMAL, header, footer); }
        catch(java.awt.print.PrinterException e){ System.err.format("Cannot print", e.getMessage());
        } }
private void cmd_attach3ActionPerformed(java.awt.event.ActionEvent evt) { JFileChooser chooser= new JFileChooser();
        chooser.showOpenDialog(null);
        File f =chooser.getSelectedFile();
        String filename =f.getAbsolutePath();
        txt_filechooser.setText(filename); }
private void cmd_bargraphActionPerformed(java.awt.event.ActionEvent evt) { String Name =txt_name.getText();
        String Issueditem =txt_issueditem.getText();

// String Quantity =txt_quantityissued.getText(); //
//
// DefaultCategoryDataset dataset= new DefaultCategoryDataset();
// //dataset.setValue(new Double(Name), "Values", "Name");
// //dataset.setValue(new Double(Issueditem), "Values", "Issued Item");
// dataset.setValue(new Double(Quantity), "Values", "Quantity Issued"); //
// JFreeChart chart =ChartFactory.createBarChart("Parameter Values", "Parameters", "Values", dataset, PlotOrientation.VERTICAL, false, true, false);
//
//
//
//
//
//
//
        chart.setBackgroundPaint(Color.DARK_GRAY); chart.getTitle().setPaint(Color.RED);
        CategoryPlot p=chart.getCategoryPlot(); p.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame=new ChartFrame("Bar Chart for Parameters", chart); frame.setVisible(true);
        frame.setSize(450,350);
private void cmd_emailActionPerformed(java.awt.event.ActionEvent evt) { String To= txt_sendmail.getText();
        Properties props= new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com"); props.put("mail.smtp.socketFactory.port", "465"); props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory"); props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");
        Session session =Session.getDefaultInstance(props,
        new javax.mail.Authenticator() {
protected PasswordAuthentication getPasswordAuthentication(){
        return new PasswordAuthentication("raqibm@muwci.net", "Playstationvita1"); }
        }
        );
        try{
        Message message=new MimeMessage(session);
        message.setFrom(new InternetAddress("raqibm@muwci.net")); message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(To)); message.setSubject("Item Issued from Reprographics");
        message.setText("You have issued an item from Reprographics"); Transport.send(message);
        JOptionPane.showMessageDialog(null, "Message Sent");
        }

        }catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        } }
private void cmd_reportActionPerformed(java.awt.event.ActionEvent evt) { String Value1 = txt_id.getText();
        String Value2 = txt_name.getText();
        String Value3 = txt_issueditem.getText();
        String Value4 = txt_quantityissued.getText(); String Value5 = txt_email.getText();
        Calendar cal= new GregorianCalendar();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DAY_OF_MONTH); System.out.println("Current date : "
        + day + "/" + (month + 1) + "/" + year);
        try{
        Document document= new Document();
        PdfWriter.getInstance(document, new FileOutputStream("Report.pdf")); document.open();
        com.itextpdf.text.Image image=com.itextpdf.text.Image.getInstance("logo.png"); document.add(image);
        document.add(new Paragraph("Issuing History",
        FontFactory.getFont(FontFactory.TIMES_BOLD,24,Font.BOLD,BaseColor.BLACK))); document.add(new Paragraph(new java.util.Date().toString()));
        document.add(new Paragraph("------------------------------------------------------------------------------
        -------"));
        PdfPTable table=new PdfPTable(2);
        PdfPCell cell= new PdfPCell(new Paragraph("Report")); cell.setColspan(4); cell.setHorizontalAlignment(Element.ALIGN_CENTER); cell.setBackgroundColor(BaseColor.CYAN); table.addCell(cell);
        table.addCell("ID");
        table.addCell(Value1);
        table.addCell("Name");
        table.addCell(Value2);
        table.addCell("Issued Item");
        table.addCell(Value3);
        table.addCell("Quantity Issued"); table.addCell(Value4);

        table.addCell("Email");
        table.addCell(Value5);
        document.add(table);
        document.close();
        JOptionPane.showMessageDialog(null, "Report created"); }catch(Exception e){ JOptionPane.showMessageDialog(null, e);
        } // TODO add your handling code here: }
        private void txt_sendmailActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here:
        }
        private void txt_issueditemActionPerformed(java.awt.event.ActionEvent evt) { // TODO add your handling code here:
        }
/**
 * @param args the command line arguments */
        public static void main(String args[]) {
        /* Set the Nimbus look and feel */
//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "> /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */ try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) { javax.swing.UIManager.setLookAndFeel(info.getClassName()); break;
        } }
        } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(Issuing_History.class.getName()).log(java.util.logging.Level.SE VERE, null, ex);
        } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(Issuing_History.class.getName()).log(java.util.logging.Level.SE VERE, null, ex);

        } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(Issuing_History.class.getName()).log(java.util.logging.Level.SE VERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(Issuing_History.class.getName()).log(java.util.logging.Level.SE VERE, null, ex);
        } //</editor-fold>
        /* Create and display the form */ java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
        new Issuing_History().setVisible(true);
        } });
        }
// Variables declaration - do not modify
        private javax.swing.JTable Table_issuinghistory; private javax.swing.JButton back;
        private javax.swing.JButton cmd_attach3; private javax.swing.JButton cmd_bargraph; private javax.swing.JButton cmd_clear;
        private javax.swing.JButton cmd_delete; private javax.swing.JButton cmd_email;
        private javax.swing.JButton cmd_print1; private javax.swing.JButton cmd_report; private javax.swing.JButton cmd_save;
        private javax.swing.JButton cmd_update; private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JPanel jPanel2;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JPanel jPanel4;
        private javax.swing.JPanel jPanel7;
        private javax.swing.JScrollPane jScrollPane1;

        private javax.swing.JTextField txt_email;
        private javax.swing.JTextField txt_filechooser; private javax.swing.JTextField txt_id;
        private javax.swing.JTextField txt_issueditem; private javax.swing.JTextField txt_name;
        private javax.swing.JTextField txt_quantityissued; private javax.swing.JTextField txt_search;
        private javax.swing.JTextField txt_sendmail;
// End of variables declaration
        }
